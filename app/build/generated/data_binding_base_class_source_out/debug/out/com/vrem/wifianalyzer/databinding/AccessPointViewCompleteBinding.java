// Generated by view binder compiler. Do not edit!
package com.vrem.wifianalyzer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vrem.wifianalyzer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AccessPointViewCompleteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout attachPopup;

  @NonNull
  public final TextView channel;

  @NonNull
  public final TextView channelFrequencyRange;

  @NonNull
  public final TextView distance;

  @NonNull
  public final ImageView groupIndicator;

  @NonNull
  public final TextView level;

  @NonNull
  public final ImageView levelImage;

  @NonNull
  public final TextView primaryFrequency;

  @NonNull
  public final TextView ssid;

  @NonNull
  public final TextView tab;

  @NonNull
  public final TextView vendorShort;

  @NonNull
  public final ImageView wiFiStandardImage;

  @NonNull
  public final TextView width;

  private AccessPointViewCompleteBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout attachPopup, @NonNull TextView channel,
      @NonNull TextView channelFrequencyRange, @NonNull TextView distance,
      @NonNull ImageView groupIndicator, @NonNull TextView level, @NonNull ImageView levelImage,
      @NonNull TextView primaryFrequency, @NonNull TextView ssid, @NonNull TextView tab,
      @NonNull TextView vendorShort, @NonNull ImageView wiFiStandardImage,
      @NonNull TextView width) {
    this.rootView = rootView;
    this.attachPopup = attachPopup;
    this.channel = channel;
    this.channelFrequencyRange = channelFrequencyRange;
    this.distance = distance;
    this.groupIndicator = groupIndicator;
    this.level = level;
    this.levelImage = levelImage;
    this.primaryFrequency = primaryFrequency;
    this.ssid = ssid;
    this.tab = tab;
    this.vendorShort = vendorShort;
    this.wiFiStandardImage = wiFiStandardImage;
    this.width = width;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AccessPointViewCompleteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AccessPointViewCompleteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.access_point_view_complete, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AccessPointViewCompleteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attachPopup;
      LinearLayout attachPopup = ViewBindings.findChildViewById(rootView, id);
      if (attachPopup == null) {
        break missingId;
      }

      id = R.id.channel;
      TextView channel = ViewBindings.findChildViewById(rootView, id);
      if (channel == null) {
        break missingId;
      }

      id = R.id.channel_frequency_range;
      TextView channelFrequencyRange = ViewBindings.findChildViewById(rootView, id);
      if (channelFrequencyRange == null) {
        break missingId;
      }

      id = R.id.distance;
      TextView distance = ViewBindings.findChildViewById(rootView, id);
      if (distance == null) {
        break missingId;
      }

      id = R.id.groupIndicator;
      ImageView groupIndicator = ViewBindings.findChildViewById(rootView, id);
      if (groupIndicator == null) {
        break missingId;
      }

      id = R.id.level;
      TextView level = ViewBindings.findChildViewById(rootView, id);
      if (level == null) {
        break missingId;
      }

      id = R.id.levelImage;
      ImageView levelImage = ViewBindings.findChildViewById(rootView, id);
      if (levelImage == null) {
        break missingId;
      }

      id = R.id.primaryFrequency;
      TextView primaryFrequency = ViewBindings.findChildViewById(rootView, id);
      if (primaryFrequency == null) {
        break missingId;
      }

      id = R.id.ssid;
      TextView ssid = ViewBindings.findChildViewById(rootView, id);
      if (ssid == null) {
        break missingId;
      }

      id = R.id.tab;
      TextView tab = ViewBindings.findChildViewById(rootView, id);
      if (tab == null) {
        break missingId;
      }

      id = R.id.vendorShort;
      TextView vendorShort = ViewBindings.findChildViewById(rootView, id);
      if (vendorShort == null) {
        break missingId;
      }

      id = R.id.wiFiStandardImage;
      ImageView wiFiStandardImage = ViewBindings.findChildViewById(rootView, id);
      if (wiFiStandardImage == null) {
        break missingId;
      }

      id = R.id.width;
      TextView width = ViewBindings.findChildViewById(rootView, id);
      if (width == null) {
        break missingId;
      }

      return new AccessPointViewCompleteBinding((LinearLayout) rootView, attachPopup, channel,
          channelFrequencyRange, distance, groupIndicator, level, levelImage, primaryFrequency,
          ssid, tab, vendorShort, wiFiStandardImage, width);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
