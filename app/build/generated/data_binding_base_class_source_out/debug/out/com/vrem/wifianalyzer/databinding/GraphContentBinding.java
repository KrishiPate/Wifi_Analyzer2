// Generated by view binder compiler. Do not edit!
package com.vrem.wifianalyzer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.ButtonBarLayout;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vrem.wifianalyzer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GraphContentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ViewFlipper graphFlipper;

  @NonNull
  public final ButtonBarLayout graphNavigation;

  @NonNull
  public final LinearLayout graphNavigationLine1;

  @NonNull
  public final LinearLayout graphNavigationLine2;

  @NonNull
  public final Button graphNavigationSet1;

  @NonNull
  public final Button graphNavigationSet2;

  @NonNull
  public final Button graphNavigationSet3;

  @NonNull
  public final Button graphNavigationSet4;

  @NonNull
  public final Button graphNavigationSet5;

  @NonNull
  public final Button graphNavigationSet6;

  @NonNull
  public final Button graphNavigationSet7;

  @NonNull
  public final SwipeRefreshLayout graphRefresh;

  private GraphContentBinding(@NonNull LinearLayout rootView, @NonNull ViewFlipper graphFlipper,
      @NonNull ButtonBarLayout graphNavigation, @NonNull LinearLayout graphNavigationLine1,
      @NonNull LinearLayout graphNavigationLine2, @NonNull Button graphNavigationSet1,
      @NonNull Button graphNavigationSet2, @NonNull Button graphNavigationSet3,
      @NonNull Button graphNavigationSet4, @NonNull Button graphNavigationSet5,
      @NonNull Button graphNavigationSet6, @NonNull Button graphNavigationSet7,
      @NonNull SwipeRefreshLayout graphRefresh) {
    this.rootView = rootView;
    this.graphFlipper = graphFlipper;
    this.graphNavigation = graphNavigation;
    this.graphNavigationLine1 = graphNavigationLine1;
    this.graphNavigationLine2 = graphNavigationLine2;
    this.graphNavigationSet1 = graphNavigationSet1;
    this.graphNavigationSet2 = graphNavigationSet2;
    this.graphNavigationSet3 = graphNavigationSet3;
    this.graphNavigationSet4 = graphNavigationSet4;
    this.graphNavigationSet5 = graphNavigationSet5;
    this.graphNavigationSet6 = graphNavigationSet6;
    this.graphNavigationSet7 = graphNavigationSet7;
    this.graphRefresh = graphRefresh;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GraphContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GraphContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.graph_content, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GraphContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.graphFlipper;
      ViewFlipper graphFlipper = ViewBindings.findChildViewById(rootView, id);
      if (graphFlipper == null) {
        break missingId;
      }

      id = R.id.graphNavigation;
      ButtonBarLayout graphNavigation = ViewBindings.findChildViewById(rootView, id);
      if (graphNavigation == null) {
        break missingId;
      }

      id = R.id.graphNavigationLine1;
      LinearLayout graphNavigationLine1 = ViewBindings.findChildViewById(rootView, id);
      if (graphNavigationLine1 == null) {
        break missingId;
      }

      id = R.id.graphNavigationLine2;
      LinearLayout graphNavigationLine2 = ViewBindings.findChildViewById(rootView, id);
      if (graphNavigationLine2 == null) {
        break missingId;
      }

      id = R.id.graphNavigationSet1;
      Button graphNavigationSet1 = ViewBindings.findChildViewById(rootView, id);
      if (graphNavigationSet1 == null) {
        break missingId;
      }

      id = R.id.graphNavigationSet2;
      Button graphNavigationSet2 = ViewBindings.findChildViewById(rootView, id);
      if (graphNavigationSet2 == null) {
        break missingId;
      }

      id = R.id.graphNavigationSet3;
      Button graphNavigationSet3 = ViewBindings.findChildViewById(rootView, id);
      if (graphNavigationSet3 == null) {
        break missingId;
      }

      id = R.id.graphNavigationSet4;
      Button graphNavigationSet4 = ViewBindings.findChildViewById(rootView, id);
      if (graphNavigationSet4 == null) {
        break missingId;
      }

      id = R.id.graphNavigationSet5;
      Button graphNavigationSet5 = ViewBindings.findChildViewById(rootView, id);
      if (graphNavigationSet5 == null) {
        break missingId;
      }

      id = R.id.graphNavigationSet6;
      Button graphNavigationSet6 = ViewBindings.findChildViewById(rootView, id);
      if (graphNavigationSet6 == null) {
        break missingId;
      }

      id = R.id.graphNavigationSet7;
      Button graphNavigationSet7 = ViewBindings.findChildViewById(rootView, id);
      if (graphNavigationSet7 == null) {
        break missingId;
      }

      id = R.id.graphRefresh;
      SwipeRefreshLayout graphRefresh = ViewBindings.findChildViewById(rootView, id);
      if (graphRefresh == null) {
        break missingId;
      }

      return new GraphContentBinding((LinearLayout) rootView, graphFlipper, graphNavigation,
          graphNavigationLine1, graphNavigationLine2, graphNavigationSet1, graphNavigationSet2,
          graphNavigationSet3, graphNavigationSet4, graphNavigationSet5, graphNavigationSet6,
          graphNavigationSet7, graphRefresh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
